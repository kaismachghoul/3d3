/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 .\public\model\Desk1.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three'
import * as THREE from "three" 

const DeskOne = (props)=> {
  const { nodes, materials } = useGLTF('model/Desk1.glb')

  const platformDeskTexturemap = useLoader(TextureLoader, "texture/desk_wood_map.jpg")
  const platformDeskTextureNormal = useLoader(TextureLoader, "texture/desk_wood_normal.jpg")



  platformDeskTexturemap.wrapS = THREE.RepeatWrapping;
  platformDeskTexturemap.wrapT = THREE.RepeatWrapping
  platformDeskTexturemap.minFilter = THREE.LinearFilter;
  platformDeskTexturemap.magFilter = THREE.LinearFilter;

  platformDeskTextureNormal.wrapS = THREE.RepeatWrapping;
  platformDeskTextureNormal.wrapT = THREE.RepeatWrapping;
  platformDeskTextureNormal.minFilter = THREE.LinearFilter;
  platformDeskTextureNormal.magFilter = THREE.LinearFilter;


  const platformDesk = materials['Mat.16']
  platformDesk.map= platformDeskTexturemap
  platformDesk.normalMap = platformDeskTextureNormal
  // platformDesk.metalness=.1
  return (
    <group {...props} dispose={null} position={[0,0,-12]} castShadow>
      <group position={[-0.709, 0.474, 10.542]}>
        <group position={[-0.584, -0.373, -0.573]}>
          <group position={[1.521, 0.949, 0.232]} rotation={[-Math.PI / 2, 0, -1.054]} scale={0.916}>
            <group position={[0.011, 0.041, -0.001]} rotation={[Math.PI / 2, 1.054, 0]} scale={1.092}>
              <mesh geometry={nodes['Arch38_047_obj_27-Material_#2862'].geometry} material={materials['Material #2862']} castShadow receiveShadow/>
              <mesh geometry={nodes['Arch38_047_obj_27-Material_#2102'].geometry} material={materials['Material #2102']} castShadow receiveShadow/>
            </group>
            <mesh geometry={nodes.Arch38_047_obj_38.geometry} material={materials.Mat} position={[0, -0.389, 0.297]}castShadow receiveShadow />
          </group>
          <group position={[-0.84, 0.508, -0.898]}>
            <mesh geometry={nodes['Flower_vase_Agnis,_21_cm,_mother-of-pearl-Leaf'].geometry} material={materials.Leaf} castShadow receiveShadow/>
            <mesh geometry={nodes['Flower_vase_Agnis,_21_cm,_mother-of-pearl-petal_flower'].geometry} material={materials.petal_flower}castShadow receiveShadow />
            <mesh geometry={nodes['Flower_vase_Agnis,_21_cm,_mother-of-pearl-stem'].geometry} material={materials.stem} castShadow receiveShadow/>
            <mesh geometry={nodes['Flower_vase_Agnis,_21_cm,_mother-of-pearl-Glass_Flower_vase_Agnis'].geometry} material={materials.Glass_Flower_vase_Agnis} castShadow receiveShadow/>
          </group>
          <mesh geometry={nodes.Subdivision_Surface.geometry} material={materials['Mat.4']} position={[0.518, 0.65, 0.288]}castShadow receiveShadow />
          <mesh geometry={nodes.wire_034034034.geometry} material={materials.wire_034034034} position={[-0.476, -0.55, -0.838]} rotation={[0, 1.571, 0]} castShadow receiveShadow/>
          <mesh geometry={nodes.wire_000000000.geometry} material={materials.wire_000000000} position={[-0.042, -0.1, 0.55]}castShadow receiveShadow />
        </group>
        <group position={[-0.425, -0.143, -0.129]} rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.LayerLayer32.geometry} material={platformDesk} position={[0.398, -0.429, 0.045]} castShadow receiveShadow/>
          <mesh geometry={nodes.LayerLayer3.geometry} material={platformDesk} position={[0.398, -0.429, 0.045]} castShadow receiveShadow />
          <mesh geometry={nodes.LayerLayer2.geometry} material={materials['Mat.2']} position={[0.393, 0.365, 0.02]} castShadow receiveShadow />
          <mesh geometry={nodes.LayerLayer1.geometry} material={materials['Mat.2']} position={[0.398, -0.46, 0.416]} castShadow receiveShadow />
          <mesh geometry={nodes.LayerLayer5.geometry} material={platformDesk} position={[0.451, -1.116, 0.115]} castShadow receiveShadow />
          <mesh geometry={nodes.LayerLayer4.geometry} material={materials['Mat.2']} position={[0.452, -1.116, -0.11]} castShadow receiveShadow />
          <mesh geometry={nodes.LayerLayer7.geometry} material={platformDesk} position={[-0.852, 0.903, -0.08]} castShadow receiveShadow />
          <mesh geometry={nodes.Layer0.geometry} material={materials['bois-blanc']} position={[-0.852, 0.903, -0.335]} castShadow receiveShadow />
          <mesh geometry={nodes.LayerLayer6.geometry} material={platformDesk} position={[-0.597, 0.903, -0.08]} castShadow receiveShadow />
          <mesh geometry={nodes.LayerLayer8.geometry} material={materials['bois-blanc']} position={[-0.587, 0.903, -0.08]} castShadow receiveShadow />
        </group>
        <mesh geometry={nodes.plateform.geometry} material={materials['Mat.16']} position={[-0.033, -0.474, -0.082]} castShadow receiveShadow />
      </group>
    </group>
  )
}

useGLTF.preload('model/Desk1.glb')
export default DeskOne
